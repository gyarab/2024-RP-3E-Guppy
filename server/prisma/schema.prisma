generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Organization {
  id          Int                @id @default(autoincrement())
  name        String             @unique
  description String             @db.VarChar(255)
  joinCode    String             @unique
  logoUrl     String
  creator     User               @relation(fields: [creatorId], references: [id])
  creatorId   Int
  users       UserOrganization[]
  posts       Post[]
  createdAt   DateTime           @default(now())
}

model User {
  id                   Int                @id @default(autoincrement())
  email                String             @unique
  password             String
  name                 String?
  birthdate            DateTime           @default(now())
  createdAt            DateTime           @default(now())
  updatedAt            DateTime           @updatedAt
  posts                Post[]             @relation(name: "PostAuthor")
  comments             Comment[]          @relation(name: "CommentAuthor")
  organizations        UserOrganization[]
  createdOrganizations Organization[]
  likedPosts           Post[]             @relation(name: "PostLikedBy")
  likedComments        Comment[]          @relation(name: "CommentLikedBy")
  tokenVersion         Int                @default(0)
}

model Role {
  id                Int                @id @default(autoincrement())
  name              String             @unique
  userOrganizations UserOrganization[]
}

model UserOrganization {
  id             Int          @id @default(autoincrement())
  user           User         @relation(fields: [userId], references: [id])
  userId         Int
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId Int
  role           Role         @relation(fields: [roleId], references: [id])
  roleId         Int

  @@unique([userId, organizationId])
}

model Post {
  id             Int          @id @default(autoincrement())
  title          String
  content        String       @db.Text
  author         User         @relation(name: "PostAuthor", fields: [authorId], references: [id])
  authorId       Int
  comments       Comment[]
  likes          Int          @default(0)
  likedBy        User[]       @relation(name: "PostLikedBy")
  tags           Tag[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId Int
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String   @db.VarChar(255)
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  author    User     @relation(name: "CommentAuthor", fields: [authorId], references: [id])
  authorId  Int
  likes     Int      @default(0)
  likedBy   User[]   @relation(name: "CommentLikedBy")
  createdAt DateTime @default(now())
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[]
}
